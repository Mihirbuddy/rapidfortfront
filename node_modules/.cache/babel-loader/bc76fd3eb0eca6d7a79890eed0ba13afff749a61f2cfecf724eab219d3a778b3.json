{"ast":null,"code":"var _jsxFileName = \"/Users/mihirpradhan/Desktop/rapidfort/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [metadata, setMetadata] = useState(null);\n  const [pdfUrl, setPdfUrl] = useState(null);\n  const [password, setPassword] = useState('');\n  const handleUpload = async e => {\n    const file = e.target.files[0];\n    setFile(file);\n    setMetadata({\n      name: file.name,\n      size: file.size\n    });\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('password', password);\n    try {\n      const response = await axios.post('http://localhost:5000/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setPdfUrl(response.data.pdfUrl);\n    } catch (error) {\n      console.error('Error uploading file:', error);\n    }\n  };\n  const handleDownload = () => {\n    if (file) {\n      // Logic to download the file\n      const url = window.URL.createObjectURL(file);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = file.name; // Set the file name for download\n      link.click();\n      window.URL.revokeObjectURL(url);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Docx to PDF Converter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".docx\",\n        onChange: handleUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), metadata && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metadata\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Metadata\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", metadata.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Size: \", metadata.size, \" bytes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Set PDF Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Set PDF Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDownload,\n        children: \"Download PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"+6cq7wmTSoe/CCcFAJWJPki1oH8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","file","setFile","metadata","setMetadata","pdfUrl","setPdfUrl","password","setPassword","handleUpload","e","target","files","name","size","formData","FormData","append","response","post","headers","data","error","console","handleDownload","url","window","URL","createObjectURL","link","document","createElement","href","download","click","revokeObjectURL","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","placeholder","value","onClick","_c","$RefreshReg$"],"sources":["/Users/mihirpradhan/Desktop/rapidfort/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nconst App = () => {\n    const [file, setFile] = useState(null);\n    const [metadata, setMetadata] = useState(null);\n    const [pdfUrl, setPdfUrl] = useState(null);\n    const [password, setPassword] = useState('');\n\n    const handleUpload = async (e) => {\n        const file = e.target.files[0];\n        setFile(file);\n        setMetadata({ name: file.name, size: file.size });\n        const formData = new FormData();\n        formData.append('file', file);\n        formData.append('password', password);\n\n        try {\n            const response = await axios.post('http://localhost:5000/upload', formData, {\n                headers: { 'Content-Type': 'multipart/form-data' },\n            });\n            setPdfUrl(response.data.pdfUrl);\n        } catch (error) {\n            console.error('Error uploading file:', error);\n        }\n    };\n\n    const handleDownload = () => {\n      if (file) {\n        // Logic to download the file\n        const url = window.URL.createObjectURL(file);\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = file.name; // Set the file name for download\n        link.click();\n        window.URL.revokeObjectURL(url);\n      }\n    };\n\n    return (\n        <div className=\"App\">\n            <h1>Docx to PDF Converter</h1>\n            <div className=\"container\">\n                <input type=\"file\" accept=\".docx\" onChange={handleUpload} />\n                {metadata && (\n                    <div className=\"metadata\">\n                        <h3>Metadata</h3>\n                        <p>Name: {metadata.name}</p>\n                        <p>Size: {metadata.size} bytes</p>\n                    </div>\n                )}\n                <input\n                    type=\"password\"\n                    placeholder=\"Set PDF Password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                />\n                <input type=\"password\" placeholder=\"Set PDF Password\" />\n                <button onClick={handleDownload}>Download PDF</button>\n            </div>\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}